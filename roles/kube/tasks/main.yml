- name: Grub - cgroup_enable=memory swapaccount=1
  lineinfile: dest=/etc/default/grub regexp='GRUB_CMDLINE_LINUX' line='GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
  register: grub
- name: Update grub
  command: update-grub
  when: grub.changed

- name: Docker repo key
  apt_key: keyserver=pool.sks-keyservers.net id=58118E89F3A912897C070ADBF76221572C52609D
- name: Docker repo
  apt_repository: repo='deb https://apt.dockerproject.org/repo debian-jessie main' state=present
- name: Debian Stretch repo (for Etcd)
  apt_repository: repo='deb http://cloudfront.debian.net/debian stretch main'
- name: /etc/apt/preferences
  template: src=apt/preferences dest=/etc/apt/preferences
- name: Update APT cache
  apt: update_cache=yes

- name: Install Docker
  apt: name=docker-engine state=latest
  notify: [ daemon-reload, docker ]

- name: Install Etcd
  apt: name=etcd state=latest
  notify: [ daemon-reload, etcd ]

- name: Configure Etcd
  template: src=default/etcd dest=/etc/default/etcd
  notify: [ daemon-reload, etcd ]

- name: Make downloads tmp dir
  file: path=/tmp/downloads owner=root group=root mode=0755 state=directory

- name: Download kubectl
  get_url: url='http://storage.googleapis.com/kubernetes-release/release/{{ kube_release }}/bin/linux/amd64/kubectl' dest=/tmp/downloads/kubectl-{{ kube_release }}
  register: kubectl
- name: Install kubectl
  shell: cp /tmp/downloads/kubectl-{{ kube_release }} /usr/local/bin/.kubectl.tmp && mv /usr/local/bin/.kubectl.tmp /usr/local/bin/kubectl && chmod 755 /usr/local/bin/kubectl
  when: kubectl.changed

- name: Download hyperkube
  get_url: url='http://storage.googleapis.com/kubernetes-release/release/{{ kube_release }}/bin/linux/amd64/hyperkube' dest=/tmp/downloads/hyperkube-{{ kube_release }}
  register: hyperkube
- name: Install hyperkube
  shell: cp /tmp/downloads/hyperkube-{{ kube_release }} /usr/local/bin/.hyperkube.tmp && mv /usr/local/bin/.hyperkube.tmp /usr/local/bin/hyperkube && chmod 755 /usr/local/bin/hyperkube
  when: hyperkube.changed

- name: Download calicoctl
  get_url: url='https://github.com/projectcalico/calico-containers/releases/download/{{ calicoctl_release }}/calicoctl' dest=/tmp/downloads/calicoctl-{{ calicoctl_release }}
  register: calicoctl
- name: Install calicoctl
  shell: cp /tmp/downloads/calicoctl-{{ calicoctl_release }} /usr/local/bin/.calicoctl.tmp && mv /usr/local/bin/.calicoctl.tmp /usr/local/bin/calicoctl && chmod 755 /usr/local/bin/calicoctl
  when: calicoctl.changed

- name: /opt/cni/bin
  file: path=/opt/cni/bin state=directory recurse=yes owner=root group=root mode=0755
- name: Download calico
  get_url: url='https://github.com/projectcalico/calico-cni/releases/download/{{ calicocni_release }}/calico' dest=/tmp/downloads/calico-{{ calicocni_release }}
  register: calico
- name: Install calico
  shell: cp /tmp/downloads/calico-{{ calicocni_release }} /opt/cni/bin/.calico.tmp && mv /opt/cni/bin/.calico.tmp /opt/cni/bin/calico && chmod 755 /opt/cni/bin/calico
  when: calico.changed
- name: Download calico-ipam
  get_url: url='https://github.com/projectcalico/calico-cni/releases/download/{{ calicocni_release }}/calico-ipam' dest=/tmp/downloads/calico-ipam-{{ calicocni_release }}
  register: calico_ipam
- name: Install calico-ipam
  shell: cp /tmp/downloads/calico-ipam-{{ calicocni_release }} /opt/cni/bin/.calico-ipam.tmp && mv /opt/cni/bin/.calico-ipam.tmp /opt/cni/bin/calico-ipam && chmod 755 /opt/cni/bin/calico-ipam
  when: calico_ipam.changed

- name: /etc/cni
  file: path=/etc/cni state=directory owner=root group=root mode=0755
- name: /etc/cni/net.d
  file: path=/etc/cni/net.d state=directory owner=root group=root mode=0755
- name: /etc/cni/net.d/10-calico.conf
  template: src=cni/net.d/10-calico.conf dest=/etc/cni/net.d/10-calico.conf
  notify: [ daemon-reload, calico-node, kubelet ]

- name: Install kubelet service
  template: src=systemd/kubelet.service dest=/lib/systemd/system/kubelet.service
  notify: [ daemon-reload, kubelet ]
- name: Enable kubelet service
  service: name=kubelet enabled=yes

- name: Install kube-proxy service
  template: src=systemd/kube-proxy.service dest=/lib/systemd/system/kube-proxy.service
  notify: [ daemon-reload, kube-proxy ]
- name: Enable kube-proxy service
  service: name=kube-proxy enabled=yes

- name: Install calico-node service
  template: src=systemd/calico-node.service dest=/lib/systemd/system/calico-node.service
  notify: [ daemon-reload, calico-node ]
- name: Enable calico-node service
  service: name=calico-node enabled=yes

- name: ~/.kube/config
  include: kube-user.yml user={{ item }}
  with_items: '{{ kube_users }}'

- name: Install pip
  apt: name=python-pip state=latest
- name: Uninstall default distribution AWS CLI
  apt: name=awscli state=absent
- name: Install AWS CLI using pip
  pip: name=awscli state=latest
